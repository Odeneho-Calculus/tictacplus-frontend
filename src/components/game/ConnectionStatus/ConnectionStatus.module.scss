@import '../../../styles/variables';
@import '../../../styles/mixins';

.connectionStatus {
    position: fixed;
    z-index: 1001;
    background: var(--bg-secondary);
    border: 2px solid var(--border-color);
    border-radius: 12px;
    padding: 0.75rem 1rem;
    min-width: 180px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);

    @include themed() {
        background: t('bg-secondary');
        border-color: t('border-color');
        box-shadow: 0 8px 24px rgba(t('shadow-color'), 0.2);
    }

    &:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 32px rgba(0, 0, 0, 0.3);

        @include themed() {
            box-shadow: 0 12px 32px rgba(t('shadow-color'), 0.3);
        }
    }

    // Position variants
    &.topRight {
        top: 1rem;
        right: 1rem;
    }

    &.topLeft {
        top: 1rem;
        left: 1rem;
    }

    &.bottomRight {
        bottom: 1rem;
        right: 1rem;
    }

    &.bottomLeft {
        bottom: 1rem;
        left: 1rem;
    }

    // Connection state variants
    &.connected {
        border-color: var(--success-color);
        background: rgba(var(--success-rgb), 0.1);

        @include themed() {
            border-color: t('success-color');
            background: rgba(t('success-rgb'), 0.1);
        }
    }

    &.connecting,
    &.reconnecting {
        border-color: var(--warning-color);
        background: rgba(var(--warning-rgb), 0.1);

        @include themed() {
            border-color: t('warning-color');
            background: rgba(t('warning-rgb'), 0.1);
        }
    }

    &.disconnected,
    &.error {
        border-color: var(--error-color);
        background: rgba(var(--error-rgb), 0.1);

        @include themed() {
            border-color: t('error-color');
            background: rgba(t('error-rgb'), 0.1);
        }
    }

    @media (max-width: 768px) {
        min-width: 150px;
        padding: 0.5rem 0.75rem;

        &.topRight,
        &.topLeft,
        &.bottomRight,
        &.bottomLeft {
            top: auto;
            bottom: 1rem;
            left: 50%;
            right: auto;
            transform: translateX(-50%);
        }
    }
}

.statusMain {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.statusIcon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    font-size: 1rem;
}

.connectedIcon {
    color: var(--success-color);

    @include themed() {
        color: t('success-color');
    }
}

.connectingIcon {
    color: var(--warning-color);

    @include themed() {
        color: t('warning-color');
    }
}

.disconnectedIcon,
.errorIcon {
    color: var(--error-color);

    @include themed() {
        color: t('error-color');
    }
}

.defaultIcon {
    color: var(--text-secondary);

    @include themed() {
        color: t('text-secondary');
    }
}

.statusText {
    display: flex;
    flex-direction: column;
    gap: 0.125rem;
    flex: 1;
}

.statusLabel {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--text-primary);

    @include themed() {
        color: t('text-primary');
    }
}

.latency {
    font-size: 0.75rem;
    font-weight: 500;
    font-family: 'Courier New', monospace;
}

// Signal Strength Indicator
.signalStrength {
    margin-left: 0.5rem;
}

.signalBars {
    display: flex;
    align-items: end;
    gap: 2px;
    height: 16px;
    width: 20px;
}

.signalBar {
    flex: 1;
    background: var(--border-color);
    border-radius: 1px;
    transition: all 0.3s ease;

    @include themed() {
        background: t('border-color');
    }

    &:nth-child(1) {
        height: 25%;
    }

    &:nth-child(2) {
        height: 50%;
    }

    &:nth-child(3) {
        height: 75%;
    }

    &:nth-child(4) {
        height: 100%;
    }

    &.active {
        background: var(--success-color);

        @include themed() {
            background: t('success-color');
        }
    }
}

// Detailed Information
.detailedInfo {
    margin-top: 0.75rem;
    padding-top: 0.75rem;
    border-top: 1px solid var(--border-color);
    overflow: hidden;

    @include themed() {
        border-color: t('border-color');
    }
}

.infoGrid {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.infoItem {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
}

.infoIcon {
    color: var(--text-secondary);
    font-size: 0.625rem;
    width: 12px;

    @include themed() {
        color: t('text-secondary');
    }
}

.infoLabel {
    color: var(--text-secondary);
    font-weight: 500;
    min-width: 60px;

    @include themed() {
        color: t('text-secondary');
    }
}

.infoValue {
    color: var(--text-primary);
    font-weight: 600;
    font-family: 'Courier New', monospace;

    @include themed() {
        color: t('text-primary');
    }
}

// State Indicator
.stateIndicator {
    position: absolute;
    top: -4px;
    right: -4px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: var(--success-color);
    border: 2px solid var(--bg-secondary);

    @include themed() {
        background: t('success-color');
        border-color: t('bg-secondary');
    }

    .connecting &,
    .reconnecting & {
        background: var(--warning-color);

        @include themed() {
            background: t('warning-color');
        }
    }

    .disconnected &,
    .error & {
        background: var(--error-color);

        @include themed() {
            background: t('error-color');
        }
    }
}

.pulse {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: inherit;
}

// Compact Status
.compactStatus {
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    background: var(--bg-tertiary);
    border: 1px solid var(--border-color);
    border-radius: 16px;
    padding: 0.25rem 0.5rem;
    font-size: 0.625rem;

    @include themed() {
        background: t('bg-tertiary');
        border-color: t('border-color');
    }
}

.compactIndicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    flex-shrink: 0;
}

.compactLatency {
    color: var(--text-secondary);
    font-family: 'Courier New', monospace;
    font-weight: 600;

    @include themed() {
        color: t('text-secondary');
    }
}

// Dark theme specific adjustments
:global(.dark) {
    .connectionStatus {
        background: var(--dark-bg-secondary);
        border-color: var(--dark-border-color);
        backdrop-filter: blur(15px);
    }

    .stateIndicator {
        border-color: var(--dark-bg-secondary);
    }

    .compactStatus {
        background: var(--dark-bg-tertiary);
        border-color: var(--dark-border-color);
    }
}

// Neon theme specific adjustments
:global(.neon) {
    .connectionStatus {
        background: var(--neon-bg-secondary);
        border: 2px solid var(--neon-accent-primary);
        box-shadow:
            0 0 20px rgba(var(--neon-accent-primary-rgb), 0.3),
            0 8px 24px rgba(0, 0, 0, 0.2);

        &.connected {
            border-color: var(--neon-success-color);
            box-shadow:
                0 0 20px rgba(var(--neon-success-rgb), 0.4),
                0 8px 24px rgba(0, 0, 0, 0.2);
        }

        &.connecting,
        &.reconnecting {
            border-color: var(--neon-warning-color);
            box-shadow:
                0 0 20px rgba(var(--neon-warning-rgb), 0.4),
                0 8px 24px rgba(0, 0, 0, 0.2);
        }

        &.disconnected,
        &.error {
            border-color: var(--neon-error-color);
            box-shadow:
                0 0 20px rgba(var(--neon-error-rgb), 0.4),
                0 8px 24px rgba(0, 0, 0, 0.2);
        }

        &:hover {
            box-shadow:
                0 0 25px rgba(var(--neon-accent-primary-rgb), 0.4),
                0 12px 32px rgba(0, 0, 0, 0.3);
        }
    }

    .signalBar.active {
        background: var(--neon-success-color);
        box-shadow: 0 0 4px rgba(var(--neon-success-rgb), 0.5);
    }

    .stateIndicator {
        border-color: var(--neon-bg-secondary);
        box-shadow: 0 0 8px rgba(var(--neon-success-rgb), 0.6);

        .connecting &,
        .reconnecting & {
            box-shadow: 0 0 8px rgba(var(--neon-warning-rgb), 0.6);
        }

        .disconnected &,
        .error & {
            box-shadow: 0 0 8px rgba(var(--neon-error-rgb), 0.6);
        }
    }

    .compactStatus {
        background: var(--neon-bg-tertiary);
        border: 1px solid var(--neon-accent-primary);
        box-shadow: 0 0 10px rgba(var(--neon-accent-primary-rgb), 0.2);
    }
}

// High contrast mode
@media (prefers-contrast: high) {
    .connectionStatus {
        border-width: 3px;
    }

    .statusLabel {
        font-weight: 700;
    }

    .signalBar {
        border: 1px solid var(--text-primary);

        @include themed() {
            border-color: t('text-primary');
        }
    }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
    .connectionStatus {
        transition: none;
    }

    .pulse {
        animation: none;
    }

    .connectingIcon {
        animation: none;
    }
}