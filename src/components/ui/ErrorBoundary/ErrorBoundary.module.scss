
@use '../../../styles/variables' as vars;
@use '../../../styles/mixins' as mix;

.errorBoundary {
  @include mix.flex-center;
  min-height: 100vh;
  padding: vars.$spacing-6;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.errorContainer {
  @include mix.flex-column-center;
  max-width: 500px;
  padding: vars.$spacing-8;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: vars.$rounded-2xl;
  text-align: center;
  color: white;
  box-shadow: vars.$shadow-2xl;
}

.errorIcon {
  margin-bottom: vars.$spacing-6;
  color: #ff6b6b;

  svg {
    width: 64px;
    height: 64px;
  }
}

.errorTitle {
  font-size: vars.$text-3xl;
  font-weight: vars.$font-bold;
  margin-bottom: vars.$spacing-4;
  color: white;
}

.errorMessage {
  font-size: vars.$text-lg;
  line-height: vars.$leading-relaxed;
  margin-bottom: vars.$spacing-8;
  opacity: 0.9;
}

.errorActions {
  @include mix.flex-center;
  gap: vars.$spacing-4;
  flex-wrap: wrap;
}

.primaryButton {
  @include mix.button-primary;
  padding: vars.$spacing-3 vars.$spacing-6;
  font-size: vars.$text-base;
  border-radius: vars.$rounded-lg;
  min-width: 120px;
}

.secondaryButton {
  @include mix.button-secondary;
  padding: vars.$spacing-3 vars.$spacing-6;
  font-size: vars.$text-base;
  border-radius: vars.$rounded-lg;
  min-width: 120px;
  color: white;
  border-color: rgba(255, 255, 255, 0.3);

  &:hover {
    border-color: rgba(255, 255, 255, 0.5);
    background: rgba(255, 255, 255, 0.1);
  }
}

.errorDetails {
  margin-top: vars.$spacing-6;
  width: 100%;
  text-align: left;

  summary {
    cursor: pointer;
    font-weight: vars.$font-medium;
    margin-bottom: vars.$spacing-2;
    color: #ffd93d;

    &:hover {
      opacity: 0.8;
    }
  }
}

.errorStack {
  background: rgba(0, 0, 0, 0.3);
  padding: vars.$spacing-4;
  border-radius: vars.$rounded-lg;
  font-family: vars.$font-mono;
  font-size: vars.$text-xs;
  line-height: vars.$leading-relaxed;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 200px;
  overflow-y: auto;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

// Theme variations
[data-theme="light"] {
  .errorBoundary {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .errorContainer {
    background: rgba(255, 255, 255, 0.9);
    color: vars.$dark-800;
    border-color: rgba(0, 0, 0, 0.1);
  }

  .errorTitle {
    color: vars.$dark-800;
  }

  .secondaryButton {
    color: vars.$dark-600;
    border-color: rgba(0, 0, 0, 0.2);

    &:hover {
      border-color: rgba(0, 0, 0, 0.3);
      background: rgba(0, 0, 0, 0.05);
    }
  }

  .errorStack {
    background: rgba(0, 0, 0, 0.05);
    border-color: rgba(0, 0, 0, 0.1);
  }
}

[data-theme="dark"] {
  .errorBoundary {
    background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  }

  .errorContainer {
    background: rgba(0, 0, 0, 0.4);
    border-color: rgba(255, 255, 255, 0.1);
  }
}

[data-theme="neon"] {
  .errorBoundary {
    background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
  }

  .errorContainer {
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid vars.$neon-primary;
    box-shadow:
      vars.$shadow-2xl,
      0 0 20px rgba(vars.$neon-primary, 0.3);
  }

  .errorIcon {
    color: vars.$neon-error;
  }

  .errorTitle {
    color: vars.$neon-primary;
    text-shadow: 0 0 10px rgba(vars.$neon-primary, 0.5);
  }

  .primaryButton {
    background: linear-gradient(135deg, vars.$neon-primary, vars.$neon-secondary);
    border: none;
    box-shadow: 0 0 15px rgba(vars.$neon-primary, 0.3);

    &:hover {
      box-shadow: 0 0 25px rgba(vars.$neon-primary, 0.5);
    }
  }

  .secondaryButton {
    border-color: vars.$neon-primary;
    color: vars.$neon-primary;

    &:hover {
      background: rgba(vars.$neon-primary, 0.1);
      box-shadow: 0 0 15px rgba(vars.$neon-primary, 0.3);
    }
  }

  .errorStack {
    background: rgba(0, 0, 0, 0.8);
    border-color: rgba(vars.$neon-primary, 0.3);
  }
}

// Responsive design
@include mix.mobile {
  .errorBoundary {
    padding: vars.$spacing-4;
  }

  .errorContainer {
    padding: vars.$spacing-6;
  }

  .errorTitle {
    font-size: vars.$text-2xl;
  }

  .errorMessage {
    font-size: vars.$text-base;
  }

  .errorActions {
    flex-direction: column;
    width: 100%;
  }

  .primaryButton,
  .secondaryButton {
    width: 100%;
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .errorContainer {
    background: white !important;
    color: black !important;
    border: 3px solid black !important;
  }

  .errorTitle {
    color: black !important;
  }

  .primaryButton {
    background: black !important;
    color: white !important;
    border: 2px solid black !important;
  }

  .secondaryButton {
    background: white !important;
    color: black !important;
    border: 2px solid black !important;
  }

  [data-theme="dark"] {
    .errorContainer {
      background: black !important;
      color: white !important;
      border: 3px solid white !important;
    }

    .errorTitle {
      color: white !important;
    }

    .primaryButton {
      background: white !important;
      color: black !important;
      border: 2px solid white !important;
    }

    .secondaryButton {
      background: black !important;
      color: white !important;
      border: 2px solid white !important;
    }
  }
}

// Print styles
@media print {
  .errorBoundary {
    background: white !important;
    color: black !important;
  }

  .errorContainer {
    background: white !important;
    color: black !important;
    border: 2px solid black !important;
    box-shadow: none !important;
  }

  .errorActions {
    display: none;
  }
}